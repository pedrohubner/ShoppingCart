plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "org.sonarqube" version "3.0"
	id 'info.solidsoft.pitest' version '1.5.1'
	id 'jacoco'
	id 'war'
}

group = 'com.app'
version = '0.0.1-SNAPSHOT'

sonarqube {
	properties {
		property "sonar.projectKey", "test-do-pepe"
		property "sonar.organization", "pedrohubner"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.jacoco.xmlReportPaths", "$buildDir/reports/jacoco/test/jacocoTestReport.xml"
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation('junit:junit:4.13')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:2.2.5.RELEASE')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.5.RELEASE')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('io.springfox:springfox-swagger2:2.9.2')
	implementation('io.springfox:springfox-swagger-ui:2.9.2')
	compileOnly('org.projectlombok:lombok')
	annotationProcessor('org.projectlombok:lombok')
	runtimeOnly('com.h2database:h2')
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			element('CLASS')
			limit {
				minimum = 0.3
				value = 'COVEREDRATIO'
				counter = 'LINE'
			}
		}
	}
}

jacocoTestReport {
	dependsOn(test)
	reports {
		xml.enabled(true)
		csv.enabled(false)
	}
}

//check.dependsOn jacocoTestCoverageVerification

test {
	useJUnitPlatform()
	finalizedBy(jacocoTestReport)
}
